from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.builtin import CommandStart
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from states.main_program import MainProgramGeneral
from loader import dp, bot
from data_base import sqlite_db
import random
from aiogram.utils.markdown import hbold, hunderline, hcode, hlink


def random_correct_gifs():
    texts = ["ok1.mp4", "ok2.mp4", "ok3.mp4", "ok4.mp4"]
    i = random.randint(0, 3)
    return texts[i]



def random_wrong_gifs():
    texts = ["bad1.mp4", "bad2.mp4", "bad3.mp4", "bad4.mp4"]
    i = random.randint(0, 3)
    return texts[i]

def random_thinking_gifs():
    texts = ["q1.mp4", "q2.mp4", "q3.mp4", "q4.mp4", "q5.mp4"]
    i = random.randint(0, 4)
    return texts[i]

@dp.message_handler(text="–ü–æ–µ—Ö–∞–ª–∏ üöë", state=MainProgramGeneral.lesson_welcome_user)
async def start_lesson(message: types.Message,  state: FSMContext):
    await message.answer("–£ –Ω–∞—Å –µ—Å—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω–∞—è –ø–æ–ª–æ—Å–∞ –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è —Å–ø–µ—Ü—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞, –Ω–æ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫–∞–∫-—Ç–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —á—Ç–æ–±—ã —Ç—É–¥–∞ –∑–∞–µ–∑–∂–∞–ª –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –æ–Ω.")
    await message.answer("–ö–∞–∫ –º—ã –±—É–¥–µ–º —Ä–µ—à–∞—Ç—å —ç—Ç—É –∑–∞–¥–∞—á—É –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ Microsoft Office?")
    video_name = random_thinking_gifs()
    video = open(video_name, 'rb')
    await bot.send_video((types.User.get_current()).id, video)

    await message.answer(f"{hbold('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–≤–∏–¥–∏–º—ã—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π –≤ –¥–æ–∫—É–º–µ–Ω—Ç Word, Excel –∏–ª–∏ PowerPoint!!')}\n")
    photo = open("security.png", 'rb')
    await bot.send_photo((types.User.get_current()).id, photo)
    await message.answer("–ß—Ç–æ–±—ã —É–¥–æ—Å—Ç–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –Ω–µ–≥–æ –Ω–µ–≤–∏–¥–∏–º—É—é —Ü–∏—Ñ—Ä–æ–≤—É—é –ø–æ–¥–ø–∏—Å—å. –í –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞ –ü–æ–¥–ø–∏—Å–∏.")
    await message.answer("–ß—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?")
    await message.answer("1Ô∏è‚É£–û—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É –§–∞–π–ª.\n\n2Ô∏è‚É£–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –°–≤–µ–¥–µ–Ω–∏—è.\n\n3Ô∏è‚É£–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ó–∞—â–∏—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞, –ó–∞—â–∏—Ç–∞ –∫–Ω–∏–≥–∏ –∏–ª–∏ –ó–∞—â–∏—Ç–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏.\n\n4Ô∏è‚É£–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å —Ü–∏—Ñ—Ä–æ–≤—É—é –ø–æ–¥–ø–∏—Å—å."
                         + "\n\n5Ô∏è‚É£–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ Word, Excel –∏–ª–∏ PowerPoint –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –û–ö.\n\n6Ô∏è‚É£–í –¥–∏–∞–ª–æ–≥–æ–≤–æ–º –æ–∫–Ω–µ –ü–æ–¥–ø–∏—Å—å –≤ –ø–æ–ª–µ –¶–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ —É–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞\n\n7Ô∏è‚É£–©–µ–ª–∫–Ω–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç –ü–æ–¥–ø–∏—Å—å.")
    await message.answer("–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤ —Ñ–∞–π–ª –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ü–∏—Ñ—Ä–æ–≤–∞—è –ø–æ–¥–ø–∏—Å—å, –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –ü–æ–¥–ø–∏—Å–∏, –∞ —Å–∞–º —Ñ–∞–π–ª —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è.")

    video_name1 = random_correct_gifs()
    video1 = open(video_name1, 'rb')
    await bot.send_video((types.User.get_current()).id, video1)

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é‚¨Ö"),
            ],
            [
                KeyboardButton(text="–ï—â—ë —Ç–µ–æ—Ä–∏–∏!"),
            ],

        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer("–¢—ã –ø—Ä–æ—à—ë–ª –æ–¥–∏–Ω —É—Ä–æ–∫. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?", reply_markup=keyboard)
    await MainProgramGeneral.lesson_q1_user.set()


@dp.message_handler(text="–ï—â—ë —Ç–µ–æ—Ä–∏–∏!", state=MainProgramGeneral.lesson_q1_user)
async def start_lesson(message: types.Message,  state: FSMContext):

        # video = open(video_name, 'rb')
        # await bot.send_video((types.User.get_current()).id, video)
        await message.answer("–°–µ–π—á–∞—Å –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º...")
        await message.answer(f"{hbold('–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–µ—Ä—Ñ–∏–Ω–≥')}\n")
        video = open("surf.mp4", 'rb')
        await bot.send_video((types.User.get_current()).id, video)
        await message.answer("–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?")

        await message.answer("–ò–Ω—Ç–µ—Ä–Ω–µ—Ç —Å—Ç–∞–ª –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–æ–π —á–∞—Å—Ç—å—é –Ω–∞—à–µ–π –∂–∏–∑–Ω–∏, –∞ –≤–µ–±-–±—Ä–∞—É–∑–µ—Ä—ã —Å—Ç–∞–ª–∏ –Ω–∞—à–∏–º–∏ –≤–æ—Ä–æ—Ç–∞–º–∏ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ó–Ω–∞–Ω–∏–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –∏ –≤–µ–±-—Å–∞–π—Ç—ã, –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –≤–∞—Å –≤–∑–ª–æ–º–∞—é—Ç –∏–ª–∏ –Ω–µ—Ç.")

        start_buttons = ["–î–∞", "–ù–µ—Ç"]
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        keyboard.add(*start_buttons)

        await message.answer("–ê —Ç—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∑–∞–¥—É–º—ã–≤–∞–ª—Å—è –∫–∞–∫ –æ—Ç–ª–∏—á–∏—Ç—å –ø–æ–¥–¥–µ–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã –æ—Ç –Ω–∞—Å—Ç–æ—è—â–∏—Ö?", reply_markup=keyboard)
        await MainProgramGeneral.lesson_q2_user.set()
        # start_buttons = ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é‚¨Ö"]
        # keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        # keyboard.add(*start_buttons)
        # await message.answer("–¢—ã –∏–∑—É—á–∏–ª –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –ø–æ–∑–¥–Ω–µ–µ, –∑–¥–µ—Å—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–æ–≤–æ–µ", reply_markup=keyboard)

@dp.message_handler(text="–î–∞", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message,  state: FSMContext):

        # video = open(video_name, 'rb')
        # await bot.send_video((types.User.get_current()).id, video)
        await message.answer("–ö—Ä—É—Ç–æ! –ù–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –Ω–µ –ø–æ–º–µ—à–∞–ª–æ –±—ã, –ø—Ä–∞–≤–¥–∞?")

        await state.update_data(button_clicked=0)
        await state.update_data(pwd_scam=0)
        await state.update_data(window_scam=0)
        await state.update_data(bank_scam=0)
        await state.update_data(conv_scam=0)

        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"),
                ],
                [
                    KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"),
                ],
                [
                    KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"),
                ],
                [
                    KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"),
                ],
            ],
            resize_keyboard=True
        )
        await message.answer(
            "–í–µ–±-—Å–∞–π—Ç—ã –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã, –∏ —Ö–∞–∫–µ—Ä—ã –≤—Å–µ–≥–¥–∞ –∏—â—É—Ç –Ω–æ–≤—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à—É –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ —ç—Ç–∏—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ç–∞–∫—Ç–∏–∫.", reply_markup=keyboard)
        await MainProgramGeneral.lesson_q2_user.set()


@dp.message_handler(text="–ù–µ—Ç", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)
    await message.answer("–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Å–µ–π—á–∞—Å —Ç—ã –ø—Ä–æ —ç—Ç–æ —É–∑–Ω–∞–µ—à—å.")

    await state.update_data(button_clicked=0)
    await state.update_data(pwd_scam=0)
    await state.update_data(window_scam=0)
    await state.update_data(bank_scam=0)
    await state.update_data(conv_scam=0)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"),
            ],
            [
                KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"),
            ],
            [
                KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"),
            ],
            [
                KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"),
            ],
        ],
        resize_keyboard=True
    )
    await message.answer(
        "–í–µ–±-—Å–∞–π—Ç—ã –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã, –∏ —Ö–∞–∫–µ—Ä—ã –≤—Å–µ–≥–¥–∞ –∏—â—É—Ç –Ω–æ–≤—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à—É –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ —ç—Ç–∏—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ç–∞–∫—Ç–∏–∫.",
        reply_markup=keyboard)
    await MainProgramGeneral.lesson_q2_user.set()


@dp.message_handler(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)


    async with state.proxy() as data:
        data["button_clicked"]+=1
        data["pwd_scam"] += 1

    data = await state.get_data()
    window_scam = data.get("window_scam")
    bank_scam = data.get("bank_scam")
    conv_scam = data.get("conv_scam")
    if window_scam==0 and bank_scam==0 and conv_scam==0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"),],
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"),],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"),],], resize_keyboard=True)
    elif window_scam==0 and bank_scam==0 and conv_scam==1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                ], resize_keyboard=True)
    elif window_scam == 0 and bank_scam == 1 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and bank_scam ==0 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and bank_scam ==1 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and bank_scam == 0 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
            ], resize_keyboard=True)
    elif window_scam == 0 and bank_scam == 1 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and bank_scam == 1 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–î–∞–ª—å—à–µ‚û°"), ],
            ], resize_keyboard=True)


    await message.answer("–ü–æ–¥–¥–µ–ª—å–Ω–æ–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ–º —Å–±—Ä–æ—Å–∏—Ç—å –∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–∞—Ä–æ–ª—å —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏. –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –≤–∞—à –ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Ö–∞–∫–µ—Ä—É.", reply_markup=keyboard)
    await MainProgramGeneral.lesson_q2_user.set()


@dp.message_handler(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)


    async with state.proxy() as data:
        data["button_clicked"] += 1
        data["bank_scam"] += 1

    data = await state.get_data()
    window_scam = data.get("window_scam")
    pwd_scam = data.get("pwd_scam")
    conv_scam = data.get("conv_scam")
    if window_scam == 0 and pwd_scam == 0 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ], ], resize_keyboard=True)
    elif window_scam == 0 and pwd_scam == 0 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
            ], resize_keyboard=True)
    elif window_scam == 0 and pwd_scam == 1 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and pwd_scam == 0 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and pwd_scam == 1 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and pwd_scam == 0 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
            ], resize_keyboard=True)
    elif window_scam == 0 and pwd_scam == 1 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
            ], resize_keyboard=True)
    elif window_scam == 1 and pwd_scam == 1 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–î–∞–ª—å—à–µ‚û°"), ],
            ], resize_keyboard=True)

    await message.answer(
        "–≠—Ç–∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –≤–µ–±-—Å–∞–π—Ç—ã, –≤—ã–≥–ª—è–¥—è—â–∏–µ –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–µ, —Å–æ–±–∏—Ä–∞—é—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –µ–µ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Ö–∞–∫–µ—Ä—É.",
        reply_markup=keyboard)
    await MainProgramGeneral.lesson_q2_user.set()

@dp.message_handler(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)


    async with state.proxy() as data:
        data["button_clicked"] += 1
        data["window_scam"] += 1
    data = await state.get_data()
    bank_scam = data.get("bank_scam")
    pwd_scam = data.get("pwd_scam")
    conv_scam = data.get("conv_scam")
    if bank_scam == 0 and pwd_scam == 0 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ], ], resize_keyboard=True)
    elif bank_scam == 0 and pwd_scam == 0 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
            ], resize_keyboard=True)
    elif bank_scam == 0 and pwd_scam == 1 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 0 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 1 and conv_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 0 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
            ], resize_keyboard=True)
    elif bank_scam == 0 and pwd_scam == 1 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 1 and conv_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–î–∞–ª—å—à–µ‚û°"), ],
            ], resize_keyboard=True)

    await message.answer(
        "–í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ —Ç–æ–º, —á—Ç–æ –Ω–∞ –≤–∞—à–µ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–µ –ü–û, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä.",
        reply_markup=keyboard)
    await MainProgramGeneral.lesson_q2_user.set()

@dp.message_handler(text="–ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)


    async with state.proxy() as data:
        data["button_clicked"] += 1
        data["conv_scam"] += 1

    data = await state.get_data()
    bank_scam = data.get("bank_scam")
    pwd_scam = data.get("pwd_scam")
    window_scam = data.get("window_scam")
    if bank_scam == 0 and pwd_scam == 0 and window_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ], ], resize_keyboard=True)
    elif bank_scam == 0 and pwd_scam == 0 and window_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
            ], resize_keyboard=True)
    elif bank_scam == 0 and pwd_scam == 1 and window_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 0 and window_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 1 and window_scam == 0:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –æ–∫–Ω–∞–º–∏"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 0 and window_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ —Å –ø–∞—Ä–æ–ª–µ–º"), ],
            ], resize_keyboard=True)
    elif bank_scam == 0 and pwd_scam == 1 and window_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ"), ],
            ], resize_keyboard=True)
    elif bank_scam == 1 and pwd_scam == 1 and window_scam == 1:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–î–∞–ª—å—à–µ‚û°"), ],
            ], resize_keyboard=True)

    await message.answer(
        "–≠—Ç–∏ –æ–Ω–ª–∞–π–Ω-–º–æ—à–µ–Ω–Ω–∏–∫–∏ —É—Ç–≤–µ—Ä–∂–¥–∞—é—Ç, —á—Ç–æ –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø—Ä–∏–∑, –∞ –∑–∞—Ç–µ–º –ø—Ä–æ—Å—è—Ç –≤–∞—Å –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—é –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ–∞–ª—å—à–∏–≤—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º.",
        reply_markup=keyboard)
    await MainProgramGeneral.lesson_q2_user.set()

@dp.message_handler(text="–î–∞–ª—å—à–µ‚û°", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)
    await message.answer("–ù–∞ —á—Ç–æ –∂–µ –æ–±—Ä–∞—â–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ?")
    await  message.answer("–•–æ—Ç—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö –≤–µ–±-—Å–∞–π—Ç–æ–≤ –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è, –≤–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –≤–µ—â–µ–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å–ª–µ–¥—É–µ—Ç –æ–±—Ä–∞—â–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ.")

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–≥–Ω–∞–ª–∏ –¥–∞–ª—å—à–µüöï"), ],
            ], resize_keyboard=True, one_time_keyboard=True)


    await message.answer(
        "1Ô∏è‚É£ –ß—É–≤—Å—Ç–≤–æ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏\n\n–£–≥—Ä–æ–∑—ã, —Å—Ç—Ä–∞—Ö –∏ —á—É–≤—Å—Ç–≤–æ —Å—Ä–æ—á–Ω–æ—Å—Ç–∏ - –≤—Å–µ —ç—Ç–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ç–∞–∫—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ö–∞–∫–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç, —á—Ç–æ–±—ã –æ–±–º–∞–Ω—É—Ç—å —Å–≤–æ–∏—Ö –∂–µ—Ä—Ç–≤, –∑–∞—Å—Ç–∞–≤–ª—è—è —Å–Ω–∞—á–∞–ª–∞ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –∞ –¥—É–º–∞—Ç—å –ø–æ—Ç–æ–º.\n\n" +
        "2Ô∏è‚É£ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–∏—Å–∫\n\n–í—Å–µ–≥–¥–∞ –∏—â–∏—Ç–µ –∑–Ω–∞—á–æ–∫ –∑–∞–º–∫–∞, —Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–∫ HTTPS, –Ω–∞ –ø–∞–Ω–µ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤–µ–±-—Å–∞–π—Ç –±–µ–∑–æ–ø–∞—Å–µ–Ω, –∞ –≤–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞.\n\n" +
        "3Ô∏è‚É£ –°—Ç—Ä–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞\n\n–í—Å–µ–≥–¥–∞ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ URL-–∞–¥—Ä–µ—Å –≤–µ–±-—Å–∞–π—Ç–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–π. –í —Å–ª—É—á–∞–µ —Å–æ–º–Ω–µ–Ω–∏–π –≤–≤–µ–¥–∏—Ç–µ URL –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã.\n\n–í—Ä–µ–¥–æ–Ω–æ—Å–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞\n\n" +
        "–í—Ä–µ–¥–æ–Ω–æ—Å–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞ - —ç—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ–∫–ª–∞–º—ã –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–≥–æ –ü–û, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –¥–∞–∂–µ –Ω–∞–π—Ç–∏ –Ω–∞ –∑–∞–∫–æ–Ω–Ω—ã—Ö –≤–µ–±-—Å–∞–π—Ç–∞—Ö. –û—Å—Ç–µ—Ä–µ–≥–∞–π—Ç–µ—Å—å ¬´—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π¬ª, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω—ã–º –≤–µ–±-—Å–∞–π—Ç–∞–º –∏ –¥–∞–∂–µ –∑–∞—Ä–∞–∑–∏—Ç—å –≤–∞—à –∫–æ–º–ø—å—é—Ç–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏-–≤—ã–º–æ–≥–∞—Ç–µ–ª—è–º–∏.",
        reply_markup=keyboard)
    await MainProgramGeneral.lesson_q2_user.set()

@dp.message_handler(text="–ü–æ–≥–Ω–∞–ª–∏ –¥–∞–ª—å—à–µüöï", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)
    await message.answer("–ù–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µüöï"), ],
            ], resize_keyboard=True, one_time_keyboard=True)


    await message.answer(
        "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ\n\n–ü—Ä–∏ –ø–æ—Å–µ—â–µ–Ω–∏–∏ –≤–µ–±-—Å–∞–π—Ç–æ–≤ –≤—Å–µ–≥–¥–∞ –∏—â–∏—Ç–µ –Ω–µ—á–µ—Ç–Ω—ã–µ URL-–∞–¥—Ä–µ—Å–∞, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∑–Ω–∞—á–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ –ª—é–±—ã–µ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.\n\n" +
        "2Ô∏è‚É£ –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –≤ –∫—É—Ä—Å–µ\n\n–ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –¥—Ä—É–≥–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–æ–º–æ–∂–µ—Ç –∑–∞—â–∏—Ç–∏—Ç—å –≤–∞—Å –æ—Ç —à–∏—Ä–æ–∫–æ–≥–æ —Å–ø–µ–∫—Ç—Ä–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—É–≥—Ä–æ–∑.\n\n" +
        "3Ô∏è‚É£ –ù–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ\n\n–•–∞–∫–µ—Ä—Å–∫–∏–π –¥–∏–∑–∞–π–Ω –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å—Å—ã–ª–∫–∏, —á—Ç–æ–±—ã –æ–Ω–∏ –±—ã–ª–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª–µ–µ –∑–∞–º–∞–Ω—á–∏–≤—ã–º–∏, –Ω–æ –∫–æ–≥–¥–∞ —á—Ç–æ-—Ç–æ –∫–∞–∂–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —Ö–æ—Ä–æ—à–∏–º, —á—Ç–æ–±—ã –±—ã—Ç—å –ø—Ä–∞–≤–¥–æ–π, —ç—Ç–æ –æ–±—ã—á–Ω–æ —Ç–∞–∫.",
        reply_markup=keyboard)
    await MainProgramGeneral.lesson_q2_user.set()

@dp.message_handler(text="–ü–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µüöï", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message, state: FSMContext):
    # video = open(video_name, 'rb')
    # await bot.send_video((types.User.get_current()).id, video)
    await message.answer(f"{hbold('–ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ —Å–≤–æ—é —Ä–æ–ª—å!')}\n")

    await message.answer(
        "–ò–Ω—Ç–µ—Ä–Ω–µ—Ç - –±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å –Ω–∞—à–µ–π –∂–∏–∑–Ω–∏, –Ω–æ –æ–Ω —Ç–∞–∫–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–∞–º –∏ –≤–∞—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑—ã. –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç–µ - –≤–∞–∂–Ω–µ–π—à–∏–π –Ω–∞–≤—ã–∫, –∫–æ—Ç–æ—Ä—ã–π —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —É–∑–Ω–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è —ç—Ç–æ–≥–æ –Ω–∞–≤—ã–∫–∞.")

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é‚¨Ö"),
            ],
            [
                KeyboardButton(text="–ï—â—ë —Ç–µ–æ—Ä–∏–∏!!"),
            ],

        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer("–¢—ã –ø—Ä–æ—à—ë–ª —É—Ä–æ–∫. –ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ?", reply_markup=keyboard)


@dp.message_handler(text="–ï—â—ë —Ç–µ–æ—Ä–∏–∏!!", state=MainProgramGeneral.lesson_q2_user)
async def start_lesson(message: types.Message,  state: FSMContext):
    start_buttons = ["–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é‚¨Ö"]
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(*start_buttons)
    await message.answer("–¢—ã –∏–∑—É—á–∏–ª –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –ø–æ–∑–¥–Ω–µ–µ, –∑–¥–µ—Å—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è —á—Ç–æ-–Ω–∏–±—É–¥—å –Ω–æ–≤–æ–µ", reply_markup=keyboard)